---
layout: post
title:  "Day24 HTML5——File API"
date:   2017-06-28
categories: 《JavaScript高级程序设计》笔记
spend: 2h
excerpt: ""
---
HTML5中提供了一些API，让浏览器也可以访问本地文件。各浏览器的支持情况如下：
![File API的浏览器支持](http://navcd-1252873427.file.myqcloud.com/head_img/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-06-28%20%E4%B8%8B%E5%8D%885.25.57.png)
在表单文件控件选择了一个或多个文件时，可以通过files集合来访问，files包含一个file对象，该对象有以下属性：
* name：文件名
* size：文件的字节大小
* type：字符串，文件的MIME类型
* lastModified：文件在本地的最后修改时间
{% highlight JavaScript %}
    var file = document.querySelector("input[type='file']");
    file.addEventListener('change', function (e) {
        var target = e.target;
        console.log(target.files[0]);
    }, false)
{% endhighlight %}
##### FileReader 类型
该对象提供了以下4个方法来异步读取数据：
* readAsText(file,encoding)：以纯文本的形式读取文件，结果存在result中。第二个参数指定编码格式。
* readAsDataURL(file)：读取文件并将文件以数据URL的形式保存在result中。
* readAsBinaryString(file)：读取文件并将一个字符串保存在result属性中，字符串中每个字符表示一字节。
* readAsArrayBuffer：读取文件并将一个包含文件内容的ArrayBuffer保存在result中。

由于读取过程是异步的，因此FileReader对象提供了几个事件。
- progress：在上传过程中，每过50ms就会触发一次该事件，通过对象可以获得和XHR的progress事件相同的信息：lengthComputable、loaded和total。虽然数据没有读取完毕，但是也可以使用result属性读取到文件内容。
- error：无法读取文件时，触发该事件，相关信息保存在FileReader对象的error属性中，error属性是个对象，只保存一个名为code的值，表示错误的状态码。1(未找到文件)，2(安全性错误)，3(读取中断)，4(文件不可读)，5(编码错误)
- load：文件加载成功后触发。

一个应用场景是在上传图片时，把选中而未开始上传的图片回显出来。
{% highlight JavaScript %}
    var file = document.getElementById('file'),
        div = document.getElementById('div');
    file.addEventListener('change', function (e) {
        var reader = new FileReader();
        var uploadFile = e.target.files[0];
        if (/image/.test(uploadFile.type)) {
            reader.readAsDataURL(uploadFile);
            reader.error = function () {
                console.log(reader.error);
            };
            reader.onload = function () {
                imgWrap.innerHTML = '<img src="'+reader.result+'">';
            };
        }
    }, false)
{% endhighlight %}
