---
layout: post
title:  "一句话解释HTTP2"
date:   2017-10-24
categories: 网络基础
spend: 
excerpt: ""
---

#### HTTP1.1的瓶颈  

HTTP1.1时代里，每次TCP连接只能下载一个资源，比如向服务器请求index.html文件，浏览器拿到index.html文件,解析index.html时遇到`<link>`、`<script>`等标签时，又会发送请求获取对应的css、js等资源，这就引发两个问题：  

1.每请求一个资源就会来一次TCP连接,这样在资源过多的情况下,TCP连接消耗的时间会逐渐增加  
2.每次发送请求的HTTP头部信息基本相同，造成头部信息冗长，耗费流量  
3.从获取解析index.html文件到碰撞`<link>`、`<script>`等标签时,中间流失的时间没有充分利用  

#### HTTP2做了什么?  

一句话解释: 合并请求,缩小数据,预先加载,提升性能  

在HTTP2中,允许多个请求合并和为一个请求,如下图,让多个数据在一条连接里传输,解决了问题1:

![合并请求](http://navcd-1252873427.cosgz.myqcloud.com/head_img/%E5%90%88%E5%B9%B6%E8%AF%B7%E6%B1%82.jpeg)

由于是同一个请求,HTTP头信息也就只有一个,由下图可看出,HTTP2的头部信息允许防止多个方法,既可以是`GET`,也可以是`PUT`,在切换到下一个方法后,获取数据的同时不需要再次获取头信息。

![单一链接](http://navcd-1252873427.cosgz.myqcloud.com/head_img/HTTP2%E5%A4%B4%E4%BF%A1%E6%81%AF.jpeg)

而且,HTTP2将头信息进行了压缩(HPACK),减少了头信息的大小,解决了问题2。  

同时,HTTP2新加入了一个推送(PUSH)方法。在服务器返回index.html文件时,尝试把index.html文件需要的css、js等资源也一同发送给浏览器,这样在解析html和发送css、js请求的时候可能可能浏览器已经把资源下载好了,请求直接从缓存里面去取资源,极大地减少了网络请求的时间。

#### HTTP2带来的影响
在没有HTTP2之前,为了减少HTTP请求,前端的资源文件大多会进行压缩合并,但HTTP2实现了资源的预加载,这就表明http请求多的站点不一定会比http请求少的站点资源加载消耗的时间多,这也在一定程度上可以让前端的开发环境和线上环境资源保持一致,但压缩还是有必要的,毕竟加载小文件肯定是比大文件快。

#### 使用HTTP2
