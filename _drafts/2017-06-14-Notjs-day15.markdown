---
layout: post
title:  "Day15 事件(一)"
date:   2017-06-14
categories: 《JavaScript高级程序设计》笔记
spend: 3h
excerpt: ""
---
#### 一、事件处理程序
##### 1.DOM2级事件处理程序
DOM0级的事件处理方式，就是将一个函数赋值给事件处理程序属性，像这样:
{% highlight javascript %}
    var btn = document.getElementById('btn');
    btn.onclick = function() {
        alert(this.value);  
    }
{% endhighlight %}
在DOM2级里，提供了两个用于指定和删除事件处理程序的方法:
* addEventListener
* removeEventListener

两个方法都接收三个参数:要处理的事件名、处理函数、布尔值。其中布尔值为`true`表示在捕获阶段调用处理函数，`false`表示在冒泡阶段调用。

假设给按钮绑定一个click事件，如果使用DOM0级的方式，给按钮的`onclick`属性赋值为一个函数，将只能绑定一个click事件，多次绑定会覆盖前一个事件。

而用`addEventListener`则可以绑定多个处理函数。如:
{% highlight javascript %}
    var btn = document.getElementById('btn');
    btn.addEventListener('click', function() {
        alert('first');
    }, false);
    btn.addEventListener('click', function() {
        alert('second');
    }, false);
{% endhighlight %}
这样将会先弹出first，然后又弹出second。

值得一提的是，使用`removeEventListener`方法时，必须传入和`addEventListener`一样的参数才能移除处理函数，因此，如果处理函数是一个匿名函数的话，是没有办法被移除的。

##### 2.IE的事件处理程序
IE9以下的浏览器只支持事件冒泡，且不支持DOM2级方法，因此，绑定事件需要使用`attachEvent`和`detachEvent`方法。它们接收要处理的事件名和处理函数两个参数。

使用`attachEvent`和DOM0级方法的主要区别在于事件处理程序的作用域。使用DOM0级方法时，事件处理程序在所属元素的作用域内运行;而在使用`attachEvent`时，事件处理程序会在全局作用域运行。所以`this`等于`window`。
{% highlight javascript %}
    var btn = document.getElementById('btn');
    btn.attachEvent('onclick', function() {
        alert(this === window);  //true
    });
{% endhighlight %}

`attachEvent`也可以给元素绑定多个事件，但执行它们的先后顺序跟`addEventListener`添加的相反，最后添加的，最先执行。

`detachEvent`的使用和`removeEventListener`一样，也是需要传入和`attachEvent`一样的参数，这也意味着添加的匿名函数处理程序不能被移除。
#### 二、事件里的盲区
##### 1.Image对象
对于页面的图像元素来说，并不是图片被加载到文档中才开始下载，而是在设置了它的`src`属性后就开始下载。这点与`script`、`link`标签不同，需要设置引用路径和加载到文档后才会下载，如:
{% highlight javascript %}
    var img = new Image();
    img.src = 'test.png';   //开始下载
{% endhighlight %}
Image对象在DOM0级里就得到了实现，我们可以使用它来预加载资源。